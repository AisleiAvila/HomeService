/**
 * Teste da nova implementa√ß√£o OTP para registro
 */

import { createClient } from "@supabase/supabase-js";

const supabaseUrl = "https://uqrvenlkquheajuveggv.supabase.co";
const supabaseKey =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVxcnZlbmxrcXVoZWFqdXZlZ2d2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNzg4NDgsImV4cCI6MjA3MjY1NDg0OH0.ZdgBkvjC5irHh7E9fagqX_Pu797anPfE8jO91iNDRIc";

const supabase = createClient(supabaseUrl, supabaseKey);

async function testNewOTPImplementation() {
  console.log("üöÄ TESTANDO NOVA IMPLEMENTA√á√ÉO OTP\n");

  // Aguardar para evitar rate limit
  console.log("‚è≥ Aguardando para evitar rate limit...");
  await new Promise((resolve) => setTimeout(resolve, 10000));

  const testUser = {
    name: "Teste Nova Implementa√ß√£o",
    email: `nova-impl-${Date.now()}@homeservice.test`,
    password: "NovaImplementacao123!",
    role: "client",
  };

  console.log("üë§ Dados do teste:");
  console.log("  Nome:", testUser.name);
  console.log("  Email:", testUser.email);
  console.log("  Role:", testUser.role);

  try {
    // Simular o novo fluxo: usar signInWithOtp
    console.log("\nüìß Passo 1: Enviando c√≥digo OTP (novo m√©todo)...");

    const { error: otpError } = await supabase.auth.signInWithOtp({
      email: testUser.email,
      options: {
        shouldCreateUser: true,
        data: {
          name: testUser.name,
          role: testUser.role,
          password: testUser.password,
        },
      },
    });

    if (otpError) {
      if (otpError.message.includes("rate limit")) {
        console.log("‚ö†Ô∏è Rate limit ainda ativo. Aguarde mais alguns minutos.");
        return;
      }
      console.error("‚ùå Erro ao enviar OTP:", otpError.message);
      return;
    }

    console.log("‚úÖ C√≥digo OTP enviado com sucesso!");

    console.log("\nüìä RESULTADO ESPERADO:");
    console.log("   ‚úÖ Email enviado para:", testUser.email);
    console.log("   ‚úÖ Usu√°rio N√ÉO logado automaticamente");
    console.log("   ‚úÖ C√≥digo de 6 d√≠gitos no Mailtrap");
    console.log("   ‚úÖ Usu√°rio vai para tela de verifica√ß√£o");

    console.log("\nüìß VERIFICAR MAILTRAP:");
    console.log("   1. Acesse: https://mailtrap.io");
    console.log("   2. V√° para Email Sandbox");
    console.log("   3. Procure email com c√≥digo OTP");
    console.log("   4. Hor√°rio:", new Date().toLocaleString());

    console.log("\nüéØ PR√ìXIMOS PASSOS:");
    console.log("   1. Verifique se email chegou no Mailtrap");
    console.log("   2. Teste o registro na aplica√ß√£o");
    console.log("   3. Insira o c√≥digo na tela de verifica√ß√£o");
    console.log("   4. Confirme se usu√°rio consegue acessar");

    // Verificar se foi criado algum registro na auth
    console.log("\nüîç Verificando estado da autentica√ß√£o...");
    const {
      data: { user },
      error,
    } = await supabase.auth.getUser();

    if (user) {
      console.log("‚ö†Ô∏è Usu√°rio est√° logado (n√£o deveria estar):");
      console.log("   ID:", user.id);
      console.log("   Email:", user.email);
      console.log("   Confirmado:", !!user.email_confirmed_at);
    } else {
      console.log("‚úÖ Nenhum usu√°rio logado (correto!)");
    }
  } catch (error) {
    console.error("‚ùå Erro inesperado:", error);
  }
}

async function compareMethods() {
  console.log("\n\nüìã COMPARA√á√ÉO DOS M√âTODOS\n");

  console.log("‚ùå M√âTODO ANTIGO (signUp):");
  console.log("   - Usu√°rio automaticamente confirmado");
  console.log("   - Session criada imediatamente");
  console.log("   - NENHUM email enviado");
  console.log("   - Problema de configura√ß√£o do Supabase");

  console.log("\n‚úÖ M√âTODO NOVO (signInWithOtp):");
  console.log("   - Email SEMPRE enviado");
  console.log("   - Usu√°rio deve inserir c√≥digo");
  console.log("   - Perfil criado ap√≥s verifica√ß√£o");
  console.log("   - Independe da configura√ß√£o do Supabase");

  console.log("\nüîß VANTAGENS DA NOVA IMPLEMENTA√á√ÉO:");
  console.log("   ‚úÖ Funciona independente das configura√ß√µes");
  console.log("   ‚úÖ Sempre envia email de confirma√ß√£o");
  console.log("   ‚úÖ Melhor seguran√ßa");
  console.log("   ‚úÖ Experi√™ncia consistente");

  console.log("\nüì± FLUXO ATUALIZADO:");
  console.log("   1. Usu√°rio preenche formul√°rio");
  console.log("   2. Sistema envia c√≥digo OTP");
  console.log("   3. Usu√°rio vai para tela de verifica√ß√£o");
  console.log("   4. Insere c√≥digo recebido por email");
  console.log("   5. Sistema cria perfil completo");
  console.log("   6. Usu√°rio acessa aplica√ß√£o");
}

async function runTest() {
  await testNewOTPImplementation();
  await compareMethods();
}

runTest();
